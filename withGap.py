#q: WP_013263885.1
#t: 2.A.127.1.6-WP_066273597

qaln = 'QLIKLSVIILLYIAFVVIGMRGSVWRFPLQIEDTFVSNQKLLNDLVPNAIYMLKKACKEKAKAFKVESTDDLLAQYKF-----KSLQEALDVYTDGQIKIAKNDTLTALQHALFAEVGDSLKQPQPNVVIIYSES-WSNYLFNLQQKDAEMNFGLDRHFKEDLLFRNFQSVQNGTINSLENLFVSTPFPHFFTSSYR-------FNTLPTSIALPFKASNYTTMFMSGMDAAWENCAEALPHQQFDAVYDKFFLLKDYPHATYNSIGVYDEYLFQALLDKLN-KPSKKRQMITVMTTTNHPPFEFPKDLKLPPLPDSFYGKKCFAEHNRKVLDKYLTGFRYYNKTLNDFLNRFKASAAAKNTILVITGDHNVRV'
taln = 'QAVPLSMLL---FALLALCARGALGHRPVNPATAAITADHLVNELPLSSLYTVAYAIYQSGKAEEGGITYAEMPQARVIDTVRRETGLPASAFTDPKI------PMRHLQSSLHP------RTRKPNLVIVLEESLGAEFVGRLGGLPLTPN--LDRLAEQGIWFDNLYATGTRSVRGIEAVVAGFP-PTAAVSTVKLAKSQRGFFTLASFL----KPHGYESTFFYGGESHFDNMRSYFMGNGFDRVLEQKDMPKDAFIATW---GASDGDLFERAHQQFSQQPPDKPFFGLVFSSSNHAPFEFPD------------GGFDLYEQPKNTVN---NAVKYADHALGRFFEKARNSAYWDNTIFLVVADHNSRV'

qseq = 'MYKNLTYLLKHSAVILVILFFVRICFAIAFVPMGLIGSNLTVLPRLLFNVLRFDMQVVCYVLLLPTVLTFVFAALRKPWTDRVLSRFRKVYYAIVNILILALSGIDLGFFSNFNSHINLTFFDFFNEGPISLIQAIWEEYHCVYEGLAFLFLSLLILYVIRRIESDKVLARQTNCSLGGRKTSRGQLIKLSVIILLYIAFVVIGMRGSVWRFPLQIEDTFVSNQKLLNDLVPNAIYMLKKACKEKAKAFKVESTDDLLAQYKFKSLQEALDVYTDGQIKIAKNDTLTALQHALFAEVGDSLKQPQPNVVIIYSESWSNYLFNLQQKDAEMNFGLDRHFKEDLLFRNFQSVQNGTINSLENLFVSTPFPHFFTSSYRFNTLPTSIALPFKASNYTTMFMSGMDAAWENCAEALPHQQFDAVYDKFFLLKDYPHATYNSIGVYDEYLFQALLDKLNKPSKKRQMITVMTTTNHPPFEFPKDLKLPPLPDSFYGKKCFAEHNRKVLDKYLTGFRYYNKTLNDFLNRFKASAAAKNTILVITGDHNVRVILNNDVIDKRYEHSVPLYVYLPPYLRKEAYNKLTNRWGSHDDILATVAPFAFRNTKYFKMGKNLLDTSVSDSTYYSANVDQIEAIPSYQNKAERLTAARNLLRQVYFGLYWRTQQ'
tseq = 'MHALPSARPGALLVTPARPHPLTAWSGLFGLLAFVLLWDLSGLDMVVMQHIGTAQGFALQDHWWLSHVLHDGLRQAMVGAWLLLGAWTLWPRSALPRRERALVWGLATLSLLAVNLVKNHSLTSCPWDLQAFGGSAQTVSHWAWGLSDGGPGRCFPGGHASSGFAFIALCLPWLDAPAGRIRRREVGWRWLIAVLAVGGLAGAVQTLRGAHFPSHNLWTLWICCAVSLAGWRLMRARPAVPAASSDATRRPRLPWRNTLAVLRPLLVPMACMLVLLWLSRLGLALWQHERISQAQAWPLLWQQGLRFDAVLIGLVWAAPAALTPWMAMARPTQRAWSAALRWYGGLALLLLAFMELSTPAFIAQYDSRPNYLFVEYLGYAKEVGGTLLKDYWAHLLAAAVALPAMAWAYVRASRPATRPATPLCVWQAVPLSMLLFALLALCARGALGHRPVNPATAAITADHLVNELPLSSLYTVAYAIYQSGKAEEGGITYAEMPQARVIDTVRRETGLPASAFTDPKIPMRHLQSSLHPRTRKPNLVIVLEESLGAEFVGRLGGLPLTPNLDRLAEQGIWFDNLYATGTRSVRGIEAVVAGFPPTAAVSTVKLAKSQRGFFTLASFLKPHGYESTFFYGGESHFDNMRSYFMGNGFDRVLEQKDMPKDAFIATWGASDGDLFERAHQQFSQQPPDKPFFGLVFSSSNHAPFEFPDGGFDLYEQPKNTVNNAVKYADHALGRFFEKARNSAYWDNTIFLVVADHNSRVYGPSLIPVERFHIPGLILGGPIQQPQRINTVASQIDLAPTLVSLMGLSGEQPWIGRDMSDPAQRVRPGRAILQFDKIQAYMEGDRLAVLQPDSPPRLMRYHDGVLKDTQQPDPALVETAQAHARYAQWAYQRQWHR'

qGaps = qaln.count("-") #14 gaps
tgaps = taln.count("-") #40 gaps

qTMS = [[12, 36], [57, 75], [92, 111], [142, 160], [187, 205]] #[187,205] within aligned region
tTMS = [[22, 41], [72, 90], [103, 123], [154, 174], [187, 204], [217, 234], [265, 285], [310, 329], [342, 362], [393, 410], [423, 441]] #[423,441] within aligned region

qalnClean = qaln.replace("-", "")
qalnStartPos = qseq.find(qalnClean)#185
qalnEndPos = qalnStartPos + len(qalnClean)#545

talnClean = taln.replace("-", "")
talnStartPos = tseq.find(talnClean)#426
talnEndPos = talnStartPos + len(talnClean)#760

overlaps = 0
#Minimum Residue Number for an overlap to be counted
minRes = 8

qTMSWithin = []
tTMSWithin = []
for i in (i for i in qTMS if not i[0] > qalnEndPos and not i[1] < qalnStartPos): 
    qTMSStart = i[0]
    qTMSEnd = i[1]
    
    # starting position of TMS out of aligment range
    if i[0] < qalnStartPos:
        qTMSStart = qalnStartPos
    #ending position of TMS out of alignment range
    if i[1] > qalnEndPos:
        qTMSEnd = qalnEndPos
    
    qTMSgaps = (qaln[qTMSStart - qalnStartPos:qTMSEnd - qalnStartPos + 1]).count("-")
    qTMSEnd += qTMSgaps
    qTMSWithin.append([qTMSStart - qalnStartPos, qTMSEnd - qalnStartPos + 1])

for j in (j for j in tTMS if not j[0] > talnEndPos and not j[1] < talnStartPos):
    tTMSStart = j[0]
    tTMSEnd = j[1]

    #starting position of TMS out of alignment range
    if j[0] < talnStartPos:
        tTMSStart = talnStartPos
    #ending position of TMS out of alignment range
    if j[1] > talnEndPos:
        tTMSEnd = talnEndPos
    
    tTMSgaps = (taln[tTMSStart - talnStartPos:tTMSEnd - talnStartPos + 1]).count("-")
    tTMSEnd += tTMSgaps
    tTMSWithin.append([tTMSStart - talnStartPos, tTMSEnd - talnStartPos + 1])
    
print (qTMSWithin)
print (qseq[187:205 + 1])
print (qaln[qTMSWithin[0][0]:qTMSWithin[0][1]])
print (tTMSWithin)
print (taln[tTMSWithin[0][0]:tTMSWithin[0][1]])

for k in qTMSWithin:
    compStart = k[0]
    compEnd = k[1]

    for o in (o for o in tTMSWithin if not o[0] > compEnd and not o[1] < compStart):
        if o[0] > compStart:
            compStart = o[0]
        if o[1] < compEnd:
            compEnd = o[1]

    matched = 0
    for p in range(compStart, compEnd):
        if (qaln[p] == taln[p]):
            matched += 1
    
    #matched = 3 for this pair 
    if matched >= minRes:
        overlaps += 1

print(overlaps)

